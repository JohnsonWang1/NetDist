<Window x:Class="WpfClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:wpfClient="clr-namespace:WpfClient"
        xmlns:viewModels="clr-namespace:WpfClient.ViewModels"
        d:DataContext="{x:Static wpfClient:SampleDataContext.MainViewModel}"
        Icon="client.ico"
        Title="{Binding Path=Version, StringFormat={}NetDist Wpf Client (v. {0})}" Height="333.502" Width="653.451" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Wpf.Shared;component/Styles/SplitterDictionary.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Settings" Command="{Binding ShowSettingsCommand}" />
                <MenuItem Header="_Check for update" Command="{Binding CheckForUpdateCommand}" />
                <Separator />
                <MenuItem Header="_Exit" Click="MenuItem_Exit_Click" />
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar>
                <Button Command="{Binding StartCommand}" IsEnabled="{Binding IsStopped}">
                    <TextBlock>Start</TextBlock>
                </Button>
                <Button Command="{Binding StopCommand}" IsEnabled="{Binding IsStarted}">
                    <TextBlock>Stop</TextBlock>
                </Button>
                <Separator></Separator>
                <TextBlock Margin="0,0,5,0"  VerticalAlignment="Center">Parallel jobs</TextBlock>
                <Slider Value="{Binding NumberOfParallelTasks}" Minimum="1" Maximum="20" TickPlacement="TopLeft" TickFrequency="1" Width="150"></Slider>
                <Separator />
                <Button Command="{Binding AddSingleJobCommand}" Content="Get Single Job" />
            </ToolBar>
        </ToolBarTray>
        <StatusBar Height="27" DockPanel.Dock="Bottom">
            <StatusBarItem>
                <DockPanel>
                    <TextBlock VerticalAlignment="Center">Connection</TextBlock>
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="False">
                                        <Setter Property="Source" Value="Resources/button_red.png"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsConnected}" Value="True">
                                        <Setter Property="Source" Value="Resources/button_green.png"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </DockPanel>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock Text="{Binding Status, StringFormat=Status: {0}}"></TextBlock>
            </StatusBarItem>
            <Separator />
            <StatusBarItem>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="Jobs: {0}/{1}">
                            <Binding Path="Jobs.Count" />
                            <Binding Path="NumberOfParallelTasks" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem Margin="0,0,15,0" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center">Traffic:</TextBlock>
                    <Image Height="16" Source="Resources/download.png" />
                    <TextBlock VerticalAlignment="Center" Text="{Binding TrafficIn}"></TextBlock>
                    <Image Height="16" Source="Resources/up.png" />
                    <TextBlock VerticalAlignment="Center" Text="{Binding TrafficOut}"></TextBlock>
                    <ComboBox Width="100" Margin="5,0,0,0" ItemsSource="{Binding NetworkAdapters}" SelectedValue="{Binding SelectedNetworkAdapter}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem>
                <!--This is just the spacing item-->
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="15"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <DataGrid Grid.Row="0" SelectedItem="{Binding SelectedItem}" AutoGenerateColumns="False" ItemsSource="{Binding Path=Jobs}" CanUserAddRows="False" HeadersVisibility="Column" SelectionMode="Single" SelectionUnit="FullRow" MouseLeftButtonDown="DataGrid_MouseLeftButtonDown">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Handler" Width="SizeToCells" MinWidth="50" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="viewModels:JobInfoViewModel">
                                <Label Content="{Binding Path=HandlerName}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Job" Width="SizeToCells" MinWidth="50" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="viewModels:JobInfoViewModel">
                                <Label Content="{Binding Path=JobId}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="StartDate" Width="SizeToCells" MinWidth="50" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="viewModels:JobInfoViewModel">
                                <Label Content="{Binding Path=StartDate}" ContentStringFormat="HH:mm:ss" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Duration" Width="SizeToCells" MinWidth="50" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="viewModels:JobInfoViewModel">
                                <Label Content="{Binding Path=Duration}" ContentStringFormat="hh\:mm\:ss" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" ShowsPreview="False" BorderBrush="White" BorderThickness="1" Style="{DynamicResource GridSplitterStyle1}">
                <GridSplitter.Background>
                    <LinearGradientBrush EndPoint="0.5,0" StartPoint="0.5,1">
                        <GradientStop Color="#A0A0A0" Offset="0"/>
                        <GradientStop Color="#E5E5E5" Offset="0.15"/>
                        <GradientStop Color="#ECECEC" Offset="0.8"/>
                        <GradientStop Color="#E5E5E5" Offset="1"/>
                    </LinearGradientBrush>
                </GridSplitter.Background>
            </GridSplitter>
            <Grid Grid.Row="2">
                <Label DataContext="{Binding Path=SelectedItem}">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Content" Value="{Binding JobInput}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter Property="Content" Value="No job selected" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
